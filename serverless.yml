org: abponcio
app: open-ai-api
service: open-ai-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage,'dev'}
  region: ap-south-1
  timeout: 28
  environment:
    OPEN_AI_SECRET_KEY: ${param:OPEN_AI_SECRET_KEY}
    DYNAMODB_TABLE: ${self:service}-${sls:stage}-recipes
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get

  quiz:
    handler: handler.generateQuiz
    events:
      - httpApi:
          path: /generate-quiz
          method: post

  generateRecipes:
    handler: handler.generateRecipes
    timeout: 30
    events:
      - httpApi:
          path: /generate-recipes
          method: get

  generateRecipeImage:
    handler: handler.generateRecipeImage
    timeout: 30
    events:
      - httpApi:
          path: /generate-recipe-image
          method: get


plugins:
  - serverless-plugin-typescript

resources:
  Resources:
    RecipesTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
